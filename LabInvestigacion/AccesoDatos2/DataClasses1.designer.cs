#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccesoDatos2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LanguajesLab1")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertFactura(Factura instance);
    partial void UpdateFactura(Factura instance);
    partial void DeleteFactura(Factura instance);
    partial void InsertFacturaPorProducto(FacturaPorProducto instance);
    partial void UpdateFacturaPorProducto(FacturaPorProducto instance);
    partial void DeleteFacturaPorProducto(FacturaPorProducto instance);
    partial void InsertProducto(Producto instance);
    partial void UpdateProducto(Producto instance);
    partial void DeleteProducto(Producto instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::AccesoDatos2.Properties.Settings.Default.LanguajesLab1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cliente> Cliente
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<Factura> Factura
		{
			get
			{
				return this.GetTable<Factura>();
			}
		}
		
		public System.Data.Linq.Table<FacturaPorProducto> FacturaPorProducto
		{
			get
			{
				return this.GetTable<FacturaPorProducto>();
			}
		}
		
		public System.Data.Linq.Table<Producto> Producto
		{
			get
			{
				return this.GetTable<Producto>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cliente")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Cedula;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private string _Correo;
		
		private string _NumeroTelefono;
		
		private System.Nullable<int> _indicActivoCliente;
		
		private EntitySet<Factura> _Factura;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCedulaChanging(int value);
    partial void OnCedulaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnCorreoChanging(string value);
    partial void OnCorreoChanged();
    partial void OnNumeroTelefonoChanging(string value);
    partial void OnNumeroTelefonoChanged();
    partial void OnindicActivoClienteChanging(System.Nullable<int> value);
    partial void OnindicActivoClienteChanged();
    #endregion
		
		public Cliente()
		{
			this._Factura = new EntitySet<Factura>(new Action<Factura>(this.attach_Factura), new Action<Factura>(this.detach_Factura));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cedula", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Cedula
		{
			get
			{
				return this._Cedula;
			}
			set
			{
				if ((this._Cedula != value))
				{
					this.OnCedulaChanging(value);
					this.SendPropertyChanging();
					this._Cedula = value;
					this.SendPropertyChanged("Cedula");
					this.OnCedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Correo
		{
			get
			{
				return this._Correo;
			}
			set
			{
				if ((this._Correo != value))
				{
					this.OnCorreoChanging(value);
					this.SendPropertyChanging();
					this._Correo = value;
					this.SendPropertyChanged("Correo");
					this.OnCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroTelefono", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NumeroTelefono
		{
			get
			{
				return this._NumeroTelefono;
			}
			set
			{
				if ((this._NumeroTelefono != value))
				{
					this.OnNumeroTelefonoChanging(value);
					this.SendPropertyChanging();
					this._NumeroTelefono = value;
					this.SendPropertyChanged("NumeroTelefono");
					this.OnNumeroTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_indicActivoCliente", DbType="Int")]
		public System.Nullable<int> indicActivoCliente
		{
			get
			{
				return this._indicActivoCliente;
			}
			set
			{
				if ((this._indicActivoCliente != value))
				{
					this.OnindicActivoClienteChanging(value);
					this.SendPropertyChanging();
					this._indicActivoCliente = value;
					this.SendPropertyChanged("indicActivoCliente");
					this.OnindicActivoClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Factura", Storage="_Factura", ThisKey="Cedula", OtherKey="Cedula_Fk")]
		public EntitySet<Factura> Factura
		{
			get
			{
				return this._Factura;
			}
			set
			{
				this._Factura.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Factura(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Factura(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Factura")]
	public partial class Factura : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodigoFactura;
		
		private int _Cedula_Fk;
		
		private System.DateTime _FechaFactura;
		
		private EntitySet<FacturaPorProducto> _FacturaPorProducto;
		
		private EntityRef<Cliente> _Cliente;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoFacturaChanging(int value);
    partial void OnCodigoFacturaChanged();
    partial void OnCedula_FkChanging(int value);
    partial void OnCedula_FkChanged();
    partial void OnFechaFacturaChanging(System.DateTime value);
    partial void OnFechaFacturaChanged();
    #endregion
		
		public Factura()
		{
			this._FacturaPorProducto = new EntitySet<FacturaPorProducto>(new Action<FacturaPorProducto>(this.attach_FacturaPorProducto), new Action<FacturaPorProducto>(this.detach_FacturaPorProducto));
			this._Cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodigoFactura", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodigoFactura
		{
			get
			{
				return this._CodigoFactura;
			}
			set
			{
				if ((this._CodigoFactura != value))
				{
					this.OnCodigoFacturaChanging(value);
					this.SendPropertyChanging();
					this._CodigoFactura = value;
					this.SendPropertyChanged("CodigoFactura");
					this.OnCodigoFacturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cedula_Fk", DbType="Int NOT NULL")]
		public int Cedula_Fk
		{
			get
			{
				return this._Cedula_Fk;
			}
			set
			{
				if ((this._Cedula_Fk != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCedula_FkChanging(value);
					this.SendPropertyChanging();
					this._Cedula_Fk = value;
					this.SendPropertyChanged("Cedula_Fk");
					this.OnCedula_FkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaFactura", DbType="DateTime NOT NULL")]
		public System.DateTime FechaFactura
		{
			get
			{
				return this._FechaFactura;
			}
			set
			{
				if ((this._FechaFactura != value))
				{
					this.OnFechaFacturaChanging(value);
					this.SendPropertyChanging();
					this._FechaFactura = value;
					this.SendPropertyChanged("FechaFactura");
					this.OnFechaFacturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Factura_FacturaPorProducto", Storage="_FacturaPorProducto", ThisKey="CodigoFactura", OtherKey="CodigoFactura_Fk")]
		public EntitySet<FacturaPorProducto> FacturaPorProducto
		{
			get
			{
				return this._FacturaPorProducto;
			}
			set
			{
				this._FacturaPorProducto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Factura", Storage="_Cliente", ThisKey="Cedula_Fk", OtherKey="Cedula", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Factura.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Factura.Add(this);
						this._Cedula_Fk = value.Cedula;
					}
					else
					{
						this._Cedula_Fk = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FacturaPorProducto(FacturaPorProducto entity)
		{
			this.SendPropertyChanging();
			entity.Factura = this;
		}
		
		private void detach_FacturaPorProducto(FacturaPorProducto entity)
		{
			this.SendPropertyChanging();
			entity.Factura = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FacturaPorProducto")]
	public partial class FacturaPorProducto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ConsultaXProducto;
		
		private int _CantidadProducto;
		
		private int _CodigoProducto_Fk;
		
		private int _CodigoFactura_Fk;
		
		private EntityRef<Factura> _Factura;
		
		private EntityRef<Producto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConsultaXProductoChanging(int value);
    partial void OnConsultaXProductoChanged();
    partial void OnCantidadProductoChanging(int value);
    partial void OnCantidadProductoChanged();
    partial void OnCodigoProducto_FkChanging(int value);
    partial void OnCodigoProducto_FkChanged();
    partial void OnCodigoFactura_FkChanging(int value);
    partial void OnCodigoFactura_FkChanged();
    #endregion
		
		public FacturaPorProducto()
		{
			this._Factura = default(EntityRef<Factura>);
			this._Producto = default(EntityRef<Producto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsultaXProducto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ConsultaXProducto
		{
			get
			{
				return this._ConsultaXProducto;
			}
			set
			{
				if ((this._ConsultaXProducto != value))
				{
					this.OnConsultaXProductoChanging(value);
					this.SendPropertyChanging();
					this._ConsultaXProducto = value;
					this.SendPropertyChanged("ConsultaXProducto");
					this.OnConsultaXProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CantidadProducto", DbType="Int NOT NULL")]
		public int CantidadProducto
		{
			get
			{
				return this._CantidadProducto;
			}
			set
			{
				if ((this._CantidadProducto != value))
				{
					this.OnCantidadProductoChanging(value);
					this.SendPropertyChanging();
					this._CantidadProducto = value;
					this.SendPropertyChanged("CantidadProducto");
					this.OnCantidadProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodigoProducto_Fk", DbType="Int NOT NULL")]
		public int CodigoProducto_Fk
		{
			get
			{
				return this._CodigoProducto_Fk;
			}
			set
			{
				if ((this._CodigoProducto_Fk != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodigoProducto_FkChanging(value);
					this.SendPropertyChanging();
					this._CodigoProducto_Fk = value;
					this.SendPropertyChanged("CodigoProducto_Fk");
					this.OnCodigoProducto_FkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodigoFactura_Fk", DbType="Int NOT NULL")]
		public int CodigoFactura_Fk
		{
			get
			{
				return this._CodigoFactura_Fk;
			}
			set
			{
				if ((this._CodigoFactura_Fk != value))
				{
					if (this._Factura.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodigoFactura_FkChanging(value);
					this.SendPropertyChanging();
					this._CodigoFactura_Fk = value;
					this.SendPropertyChanged("CodigoFactura_Fk");
					this.OnCodigoFactura_FkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Factura_FacturaPorProducto", Storage="_Factura", ThisKey="CodigoFactura_Fk", OtherKey="CodigoFactura", IsForeignKey=true)]
		public Factura Factura
		{
			get
			{
				return this._Factura.Entity;
			}
			set
			{
				Factura previousValue = this._Factura.Entity;
				if (((previousValue != value) 
							|| (this._Factura.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Factura.Entity = null;
						previousValue.FacturaPorProducto.Remove(this);
					}
					this._Factura.Entity = value;
					if ((value != null))
					{
						value.FacturaPorProducto.Add(this);
						this._CodigoFactura_Fk = value.CodigoFactura;
					}
					else
					{
						this._CodigoFactura_Fk = default(int);
					}
					this.SendPropertyChanged("Factura");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_FacturaPorProducto", Storage="_Producto", ThisKey="CodigoProducto_Fk", OtherKey="CodigoProducto", IsForeignKey=true)]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.FacturaPorProducto.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.FacturaPorProducto.Add(this);
						this._CodigoProducto_Fk = value.CodigoProducto;
					}
					else
					{
						this._CodigoProducto_Fk = default(int);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Producto")]
	public partial class Producto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodigoProducto;
		
		private string _Descripciom;
		
		private decimal _Precio;
		
		private int _CantidadInventario;
		
		private System.Nullable<int> _indicActivoProducto;
		
		private EntitySet<FacturaPorProducto> _FacturaPorProducto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoProductoChanging(int value);
    partial void OnCodigoProductoChanged();
    partial void OnDescripciomChanging(string value);
    partial void OnDescripciomChanged();
    partial void OnPrecioChanging(decimal value);
    partial void OnPrecioChanged();
    partial void OnCantidadInventarioChanging(int value);
    partial void OnCantidadInventarioChanged();
    partial void OnindicActivoProductoChanging(System.Nullable<int> value);
    partial void OnindicActivoProductoChanged();
    #endregion
		
		public Producto()
		{
			this._FacturaPorProducto = new EntitySet<FacturaPorProducto>(new Action<FacturaPorProducto>(this.attach_FacturaPorProducto), new Action<FacturaPorProducto>(this.detach_FacturaPorProducto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodigoProducto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodigoProducto
		{
			get
			{
				return this._CodigoProducto;
			}
			set
			{
				if ((this._CodigoProducto != value))
				{
					this.OnCodigoProductoChanging(value);
					this.SendPropertyChanging();
					this._CodigoProducto = value;
					this.SendPropertyChanged("CodigoProducto");
					this.OnCodigoProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripciom", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Descripciom
		{
			get
			{
				return this._Descripciom;
			}
			set
			{
				if ((this._Descripciom != value))
				{
					this.OnDescripciomChanging(value);
					this.SendPropertyChanging();
					this._Descripciom = value;
					this.SendPropertyChanged("Descripciom");
					this.OnDescripciomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Money NOT NULL")]
		public decimal Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CantidadInventario", DbType="Int NOT NULL")]
		public int CantidadInventario
		{
			get
			{
				return this._CantidadInventario;
			}
			set
			{
				if ((this._CantidadInventario != value))
				{
					this.OnCantidadInventarioChanging(value);
					this.SendPropertyChanging();
					this._CantidadInventario = value;
					this.SendPropertyChanged("CantidadInventario");
					this.OnCantidadInventarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_indicActivoProducto", DbType="Int")]
		public System.Nullable<int> indicActivoProducto
		{
			get
			{
				return this._indicActivoProducto;
			}
			set
			{
				if ((this._indicActivoProducto != value))
				{
					this.OnindicActivoProductoChanging(value);
					this.SendPropertyChanging();
					this._indicActivoProducto = value;
					this.SendPropertyChanged("indicActivoProducto");
					this.OnindicActivoProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_FacturaPorProducto", Storage="_FacturaPorProducto", ThisKey="CodigoProducto", OtherKey="CodigoProducto_Fk")]
		public EntitySet<FacturaPorProducto> FacturaPorProducto
		{
			get
			{
				return this._FacturaPorProducto;
			}
			set
			{
				this._FacturaPorProducto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FacturaPorProducto(FacturaPorProducto entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_FacturaPorProducto(FacturaPorProducto entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
	}
}
#pragma warning restore 1591
